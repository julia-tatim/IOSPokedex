import SwiftUIimport CoreDatastruct PokemonDetailView: View {    let pokemonEntry: PokemonEntry    @State private var details: PokemonDetails?    @StateObject private var viewModel: PokemonDetailViewModel    @State private var showContent = false    init(pokemonEntry: PokemonEntry, userId: String) {        self.pokemonEntry = pokemonEntry        _viewModel = StateObject(wrappedValue: PokemonDetailViewModel(pokemonId: pokemonEntry.id, userId: userId))    }    var body: some View {        ZStack {            DesignTokens.Colors.background.ignoresSafeArea()            VStack(spacing: DesignTokens.Spacing.medium) {                if let details = details {                    AsyncImage(url: URL(string: details.sprites.front_default ?? "")) { image in                        image.resizable()                            .scaledToFit()                            .frame(width: 150, height: 150)                    } placeholder: {                        ProgressView()                    }                    Text(pokemonEntry.name.capitalized)                        .font(DesignTokens.Fonts.title)                        .foregroundColor(DesignTokens.Colors.text)                    Text("Height: \(details.height)")                        .foregroundColor(DesignTokens.Colors.text)                    Text("Weight: \(details.weight)")                        .foregroundColor(DesignTokens.Colors.text)                    Text("Types:")                        .foregroundColor(DesignTokens.Colors.text)                    ForEach(details.types, id: \.type.name) { typeSlot in                        Text(typeSlot.type.name.capitalized)                            .foregroundColor(DesignTokens.Colors.text)                    }                    // ✅ BOTÃO DE FAVORITO                    Button(action: {                        viewModel.toggleFavorito(nome: pokemonEntry.name, imagemUrl: details.sprites.front_default ?? "")                    }) {                        Image(systemName: viewModel.isFavorito ? "heart.fill" : "heart")                            .foregroundColor(viewModel.isFavorito ? .red : .gray)                            .font(.largeTitle)                            .padding(.top)                    }                } else {                    ProgressView("Loading...")                }            }            .padding()            .opacity(showContent ? 1 : 0)            .onAppear {                withAnimation(.easeIn(duration: 1.0)) {                    showContent = true                }                Pokemon().getPokemonDetails(from: pokemonEntry.url) { details in                    self.details = details                    viewModel.checarFavorito() // ✅ Verifica favorito após carregar detalhes                }            }        }    }}